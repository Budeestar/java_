<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-11T11:46:18Z" name="Finding Hospitals" finished-at="2021-05-11T11:52:12Z" duration-ms="353880">
    <groups>
    </groups>
    <test started-at="2021-05-11T11:46:18Z" name="Verifying Search Page" finished-at="2021-05-11T11:46:34Z" duration-ms="15879">
      <class name="com.practo.verifySearchResults">
        <test-method signature="checkSearchPage()[pri:0, instance:com.practo.verifySearchResults@5d20e46]" started-at="2021-05-11T17:16:18Z" name="checkSearchPage" finished-at="2021-05-11T17:16:34Z" duration-ms="15863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSearchPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.practo.verifySearchResults@5d20e46]" started-at="2021-05-11T17:16:34Z" name="getResult" finished-at="2021-05-11T17:16:34Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSearchPage status=SUCCESS method=verifySearchResults.checkSearchPage()[pri:0, instance:com.practo.verifySearchResults@5d20e46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.practo.verifySearchResults -->
    </test> <!-- Verifying Search Page -->
    <test started-at="2021-05-11T11:46:34Z" name="Verifying Top Cities" finished-at="2021-05-11T11:46:43Z" duration-ms="9032">
      <class name="com.practo.verifyTopCities">
        <test-method signature="countCities()[pri:0, instance:com.practo.verifyTopCities@3b2c72c2]" started-at="2021-05-11T17:16:34Z" name="countCities" finished-at="2021-05-11T17:16:43Z" duration-ms="9031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- countCities -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.practo.verifyTopCities@3b2c72c2]" started-at="2021-05-11T17:16:43Z" name="getResult" finished-at="2021-05-11T17:16:43Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=countCities status=SUCCESS method=verifyTopCities.countCities()[pri:0, instance:com.practo.verifyTopCities@3b2c72c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.practo.verifyTopCities -->
    </test> <!-- Verifying Top Cities -->
    <test started-at="2021-05-11T11:46:43Z" name="Getting Alert Message" finished-at="2021-05-11T11:52:12Z" duration-ms="328945">
      <class name="com.practo.getAlertMessage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:16:18Z" name="setUp" finished-at="2021-05-11T17:16:18Z" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:16:44Z" name="alertMessage" data-provider="TestData" finished-at="2021-05-11T17:18:14Z" duration-ms="90203" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Anshul]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Cognizant]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[anshul]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9876543210]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Invalid Email]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for alert to be present (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-4NFU85VS', ip: '192.168.35.161', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\REVANT~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:62175}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1685dd358f77cab42ca6f97b0e07cc12]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for alert to be present (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-4NFU85VS', ip: '192.168.35.161', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\REVANT~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:62175}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1685dd358f77cab42ca6f97b0e07cc12
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at com.practo.getAlertMessage.alertMessage(getAlertMessage.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertMessage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:18:14Z" name="getResult" finished-at="2021-05-11T17:18:14Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertMessage status=FAILURE method=getAlertMessage.alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:18:14Z" name="alertMessage" data-provider="TestData" finished-at="2021-05-11T17:19:34Z" duration-ms="79801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sharman]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TCS]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[shar.man]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9875642130]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Invalid Email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertMessage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:19:34Z" name="getResult" finished-at="2021-05-11T17:19:34Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertMessage status=SUCCESS method=getAlertMessage.alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:19:34Z" name="alertMessage" data-provider="TestData" finished-at="2021-05-11T17:20:53Z" duration-ms="79280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nimish]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HCL]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[nim.ish@gmail]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9875642130]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Invalid Email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertMessage -->
        <test-method signature="alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:20:53Z" name="alertMessage" data-provider="TestData" finished-at="2021-05-11T17:22:12Z" duration-ms="79019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Rizwan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Cognizant]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[riz@gmail]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9875642130]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Invalid Email]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertMessage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:20:53Z" name="getResult" finished-at="2021-05-11T17:20:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertMessage status=SUCCESS method=getAlertMessage.alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:22:12Z" name="getResult" finished-at="2021-05-11T17:22:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertMessage status=SUCCESS method=getAlertMessage.alertMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.practo.getAlertMessage@7bb58ca3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.practo.getAlertMessage@7bb58ca3]" started-at="2021-05-11T17:22:12Z" name="tearDown" finished-at="2021-05-11T17:22:12Z" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.practo.getAlertMessage -->
    </test> <!-- Getting Alert Message -->
  </suite> <!-- Finding Hospitals -->
</testng-results>
